{"version":3,"file":"static/js/909.ade8abd7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/contacts/selectors.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formlabel\":\"ContactForm_formlabel__A1oPk\",\"formtitle\":\"ContactForm_formtitle__+pe99\",\"forminput\":\"ContactForm_forminput__Mozbj\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleNameChange = evt => {\n    const { value } = evt.currentTarget;\n    setName(value);\n  };\n\n  const handleNumberChange = evt => {\n    const { value } = evt.currentTarget;\n    setNumber(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formlabel}>\n        <span className={css.formtitle}>Name</span>\n        <input\n          className={css.forminput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.formlabel}>\n        <span className={css.formtitle}>Number</span>\n        <input\n          className={css.forminput}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNumberChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formlabel\":\"Filter_formlabel__pSr-a\",\"formtitle\":\"Filter_formtitle__HpwjO\",\"forminput\":\"Filter_forminput__vT0T3\"};","export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import css from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { filterContact } from 'redux/contacts/filterSlice';\n\nexport function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => dispatch(filterContact(evt.currentTarget.value));\n\n  return (\n    <label className={css.formlabel}>\n      <span className={css.formtitle}>Find contacts by name:</span>\n      <input\n        className={css.forminput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        pattern=\"\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s\\]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s\\]?\\\\d{1,4}[ .\\\\-\\\\s\\]?\\\\d{1,4}[ .\\\\-\\\\s\\]?\\\\d{1,9}\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onFilter: PropTypes.func,\n  state: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listitem\":\"ContactList_listitem__UlO0Q\",\"listcontact\":\"ContactList_listcontact__RQO6n\",\"btn\":\"ContactList_btn__6Piat\"};","import css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const normFilter = filter.toLocaleLowerCase();\n\n  const findContacts = contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normFilter)\n  );\n\n  // findContacts\n  //   .sort((firstContact, secondContact) =>\n  //     firstContact.name.localeCompare(secondContact.name)\n  //   )\n  //   .map(findContact => console.log(findContact));\n\n  const onDeleteContact = contactId => dispatch(deleteContact(contactId));\n\n  return (\n    <ul className={css.list}>\n      {findContacts\n        .sort((firstContact, secondContact) =>\n          firstContact.name.localeCompare(secondContact.name)\n        )\n        .map(findContact => (\n          <li className={css.listitem} key={findContact.id}>\n            <p className={css.listcontact}>\n              {findContact.name}: {findContact.number}\n            </p>\n            <button\n              className={css.btn}\n              onClick={() => onDeleteContact(findContact.id)}\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  findContacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\",\"title\":\"Contacts_title__LxdN4\",\"subtitle\":\"Contacts_subtitle__YZry6\"};","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport css from './Contacts.module.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>\n        Phone<span className={css.accent}>book</span>\n      </h1>\n      <ContactForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n\n      <h2 className={css.subtitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","className","css","onSubmit","evt","preventDefault","newContact","addContact","type","value","onChange","currentTarget","pattern","title","required","getContacts","state","contacts","getFilter","filter","getIsLoading","isLoading","getError","error","Filter","useSelector","filterContact","ContactList","normFilter","toLocaleLowerCase","findContacts","items","contact","toLowerCase","includes","sort","firstContact","secondContact","localeCompare","map","findContact","onClick","contactId","id","deleteContact","useEffect","fetchContacts"],"sourceRoot":""}